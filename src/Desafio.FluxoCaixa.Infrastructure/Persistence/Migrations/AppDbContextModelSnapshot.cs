// <auto-generated />
using System;
using Desafio.FluxoCaixa.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Desafio.FluxoCaixa.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Desafio.FluxoCaixa.Domain.Entities.Lancamento", b =>
                {
                    b.Property<Guid>("Id").ValueGeneratedOnAdd().HasColumnType("uuid");
                    b.Property<DateOnly>("Data").HasColumnType("date");
                    b.Property<string>("Descricao").IsRequired().HasColumnType("text");
                    b.Property<int>("Tipo").HasColumnType("integer");
                    b.Property<Guid>("UserId").HasColumnType("uuid");
                    b.Property<decimal>("Valor").HasColumnType("numeric(14,2)");
                    b.HasKey("Id");
                    b.HasIndex("UserId", "Data");
                    b.ToTable("lancamentos", (string)null);
                });

            modelBuilder.Entity("Desafio.FluxoCaixa.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id").ValueGeneratedOnAdd().HasColumnType("uuid");
                    b.Property<DateTime>("CreatedAt").HasColumnType("timestamp with time zone");
                    b.Property<DateTime>("ExpiresAt").HasColumnType("timestamp with time zone");
                    b.Property<string>("IpAddress").HasColumnType("text");
                    b.Property<DateTime?>("RevokedAt").HasColumnType("timestamp with time zone");
                    b.Property<string>("ReplacedByTokenHash").HasColumnType("text");
                    b.Property<string>("TokenHash").IsRequired().HasColumnType("text");
                    b.Property<string>("UserAgent").HasColumnType("text");
                    b.Property<Guid>("UserId").HasColumnType("uuid");
                    b.HasKey("Id");
                    b.HasIndex("TokenHash").IsUnique();
                    b.HasIndex("UserId");
                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("Desafio.FluxoCaixa.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id").ValueGeneratedOnAdd().HasColumnType("uuid");
                    b.Property<DateTime>("CreatedAt").HasColumnType("timestamp with time zone");
                    b.Property<string>("Email").IsRequired().HasMaxLength(200).HasColumnType("character varying(200)");
                    b.Property<string>("PasswordHash").IsRequired().HasColumnType("text");
                    b.Property<string>("UserName").IsRequired().HasMaxLength(50).HasColumnType("character varying(50)");
                    b.HasKey("Id");
                    b.HasIndex("Email").IsUnique();
                    b.HasIndex("UserName").IsUnique();
                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
